{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "asaworkspacedp210504"
		},
		"asacosmosdb01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asacosmosdb01'"
		},
		"asacosmosdb02_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asacosmosdb02'"
		},
		"asadatalakedp210504_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'asadatalakedp210504'"
		},
		"asastoredp210504_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asastoredp210504'"
		},
		"asaworkspace356813-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asaworkspace356813-WorkspaceDefaultSqlServer'"
		},
		"asaworkspacedp210504-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asaworkspacedp210504-WorkspaceDefaultSqlServer'"
		},
		"sqlpool01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01'"
		},
		"sqlpool01_highperf_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01_highperf'"
		},
		"sqlpool01_import01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01_import01'"
		},
		"sqlpool01_workload01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01_workload01'"
		},
		"sqlpool01_workload02_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01_workload02'"
		},
		"asadatalakedp210504_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalakedp210504.dfs.core.windows.net"
		},
		"asakeyvaultdp210504_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://asakeyvaultdp210504.vault.azure.net/"
		},
		"asaworkspace356813-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalake356813.dfs.core.windows.net"
		},
		"asaworkspacedp210504-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalakedp210504.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Copy December Sales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Sales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE wwi_perf.Sale_Heap",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 8,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TransactionId",
											"type": "String"
										},
										"sink": {
											"name": "TransactionId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "CustomerId",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ProductId",
											"type": "Int16"
										},
										"sink": {
											"name": "ProductId",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "SByte"
										},
										"sink": {
											"name": "Quantity",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "Price",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TotalAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TransactionDate",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionDateId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ProfitAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "ProfitAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Hour",
											"type": "SByte"
										},
										"sink": {
											"name": "Hour",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "Minute",
											"type": "SByte"
										},
										"sink": {
											"name": "Minute",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "StoreId",
											"type": "Int16"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int16"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "asal400_december_sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asal400_saleheap_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/asal400_december_sales')]",
				"[concat(variables('workspaceId'), '/datasets/asal400_saleheap_asa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab 08 - Execute Business Analyst Queries')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Analyst",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,5)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Workload 2 for Data Analyst",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select count(X.A) from (\nselect CAST(CustomerId as nvarchar(20)) as A from wwi.SaleSmall) X where A like '%3%'",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "wwi02_sale_small_workload_02_asa",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-04T13:02:33Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi02_sale_small_workload_02_asa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab 08 - Execute Data Analyst and CEO Queries')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CEO",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,6)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Workload 1 for CEO",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select count(X.A) from (\nselect CAST(CustomerId as nvarchar(20)) as A from wwi.SaleSmall) X where A like '%3%'",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "wwi02_sale_small_workload_01_asa",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "Analyst",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,6)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Workload 2 for Data Analyst",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": "select count(X.A) from (\nselect CAST(CustomerId as nvarchar(20)) as A from wwi.SaleSmall) X where A like '%3%'",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "wwi02_sale_small_workload_02_asa",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-04T13:02:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi02_sale_small_workload_01_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi02_sale_small_workload_02_asa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Write Campaign Analytics to ASA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "asal400_lab2_writecampaignanalyticstoasa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "asal400_lab2_writecampaignanalyticstoasa",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CampaignAnalytics": {},
									"CampaignAnalyticsASA": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Module 08"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/asal400_lab2_writecampaignanalyticstoasa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Write User Profile Data to ASA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "write_user_profile_to_asa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "write_user_profile_to_asa",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EcommerceUserProfiles": {},
									"UserProfiles": {},
									"UserTopProductPurchasesASA": {},
									"DataLake": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "asadatalakedp210504",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging/userprofiles"
							},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Module 08"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/write_user_profile_to_asa')]",
				"[concat(variables('workspaceId'), '/linkedServices/asadatalakedp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asacosmosdb01')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asacosmosdb01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Module 08"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"userId": {
							"type": "integer"
						},
						"cartId": {
							"type": "string"
						},
						"preferredProducts": {
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"productReviews": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"productId": {
										"type": "integer"
									},
									"reviewText": {
										"type": "string"
									},
									"reviewDate": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "OnlineUserProfile01"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asacosmosdb01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_campaign_analytics_source')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalakedp210504",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Module 08"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "campaignanalytics.csv",
						"folderPath": "campaign-analytics",
						"fileSystem": "wwi-02"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalakedp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_december_sales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalakedp210504",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sale-20161230-snappy.parquet",
						"folderPath": "campaign-analytics",
						"fileSystem": "wwi-02"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "TransactionId",
						"type": "UTF8"
					},
					{
						"name": "CustomerId",
						"type": "INT32"
					},
					{
						"name": "ProductId",
						"type": "INT_16"
					},
					{
						"name": "Quantity",
						"type": "INT_8"
					},
					{
						"name": "Price",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "TotalAmount",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "TransactionDate",
						"type": "INT32"
					},
					{
						"name": "ProfitAmount",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "Hour",
						"type": "INT_8"
					},
					{
						"name": "Minute",
						"type": "INT_8"
					},
					{
						"name": "StoreId",
						"type": "INT_16"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalakedp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_ecommerce_userprofiles_source')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalakedp210504",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Module 08"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "online-user-profiles-02",
						"fileSystem": "wwi-02"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"visitorId": {
							"type": "integer"
						},
						"topProductPurchases": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"productId": {
										"type": "integer"
									},
									"itemsPurchasedLast12Months": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalakedp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_saleheap_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01_import01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionId",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Quantity",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "TotalAmount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "TransactionDateId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProfitAmount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Hour",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Minute",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "StoreId",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "wwi_perf",
					"table": "Sale_Heap"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01_import01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_wwi_campaign_analytics_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Module 08"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "ProductCategory",
						"type": "nvarchar"
					},
					{
						"name": "CampaignName",
						"type": "nvarchar"
					},
					{
						"name": "Revenue",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "RevenueTarget",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "State",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "CampaignAnalytics"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_wwi_usertopproductpurchases_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Module 08"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "UserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemsPurchasedLast12Months",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsTopProduct",
						"type": "bit"
					},
					{
						"name": "IsPreferredProduct",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "UserTopProductPurchases"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi02_sale_small_workload_01_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01_workload01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionId",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "TotalAmount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "TransactionDateId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProfitAmount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Hour",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Minute",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "StoreId",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "SaleSmall"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01_workload01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi02_sale_small_workload_02_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01_workload02",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionId",
						"type": "uniqueidentifier"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "TotalAmount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "TransactionDateId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProfitAmount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Hour",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Minute",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "StoreId",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "SaleSmall"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01_workload02')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asacosmosdb01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('asacosmosdb01_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asacosmosdb02')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('asacosmosdb02_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asadatalakedp210504')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asadatalakedp210504_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('asadatalakedp210504_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asakeyvaultdp210504')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('asakeyvaultdp210504_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asastoredp210504')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('asastoredp210504_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspace356813-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('asaworkspace356813-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspace356813-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asaworkspace356813-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspacedp210504-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('asaworkspacedp210504-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspacedp210504-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asaworkspacedp210504-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "asakeyvaultdp210504",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQL-USER-ASA"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asakeyvaultdp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01_highperf')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_highperf_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "asakeyvaultdp210504",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQL-USER-ASA"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asakeyvaultdp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01_import01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_import01_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "asakeyvaultdp210504",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQL-USER-ASA"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asakeyvaultdp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01_workload01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_workload01_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "asakeyvaultdp210504",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQL-USER-ASA"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asakeyvaultdp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01_workload02')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_workload02_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "asakeyvaultdp210504",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQL-USER-ASA"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asakeyvaultdp210504')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureIntegrationRuntime01')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "MemoryOptimized",
							"coreCount": 16,
							"timeToLive": 60
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asal400_lab2_writecampaignanalyticstoasa')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 08"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "asal400_campaign_analytics_source",
								"type": "DatasetReference"
							},
							"name": "CampaignAnalytics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "asal400_wwi_campaign_analytics_asa",
								"type": "DatasetReference"
							},
							"name": "CampaignAnalyticsASA"
						}
					],
					"transformations": [
						{
							"name": "MapCampaignAnalytics"
						},
						{
							"name": "ConvertColumnTypesAndValues"
						},
						{
							"name": "SelectCampaignAnalyticsColumns"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as string,\n\t\t{_col1_} as string,\n\t\t{_col2_} as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as double,\n\t\t{_col6_} as string,\n\t\t{_col7_} as double,\n\t\t{_col8_} as string,\n\t\t{_col9_} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tskipLines: 1) ~> CampaignAnalytics\nCampaignAnalytics select(mapColumn(\n\t\tRegion = {_col0_},\n\t\tCountry = {_col1_},\n\t\tProductCategory = {_col2_},\n\t\tCampaignName = {_col3_},\n\t\tRevenuePart1 = {_col4_},\n\t\tRevenue = {_col5_},\n\t\tRevenueTargetPart1 = {_col6_},\n\t\tRevenueTarget = {_col7_},\n\t\tCity = {_col8_},\n\t\tState = {_col9_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MapCampaignAnalytics\nMapCampaignAnalytics derive(Revenue = toDecimal(replace(concat(toString(RevenuePart1), toString(Revenue)), '\\\\', ''), 10, 2, '$###,###.##'),\n\t\tRevenueTarget = toDecimal(replace(concat(toString(RevenueTargetPart1), toString(RevenueTarget)), '\\\\', ''), 10, 2, '$###,###.##')) ~> ConvertColumnTypesAndValues\nConvertColumnTypesAndValues select(mapColumn(\n\t\tRegion,\n\t\tCountry,\n\t\tProductCategory,\n\t\tCampaignName,\n\t\tRevenue,\n\t\tRevenueTarget,\n\t\tCity,\n\t\tState\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCampaignAnalyticsColumns\nSelectCampaignAnalyticsColumns sink(input(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tProductCategory as string,\n\t\tCampaignName as string,\n\t\tRevenue as decimal(10,2),\n\t\tRevenueTarget as decimal(10,2),\n\t\tCity as string,\n\t\tState as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CampaignAnalyticsASA"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/asal400_campaign_analytics_source')]",
				"[concat(variables('workspaceId'), '/datasets/asal400_wwi_campaign_analytics_asa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/write_user_profile_to_asa')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 08"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "asal400_ecommerce_userprofiles_source",
								"type": "DatasetReference"
							},
							"name": "EcommerceUserProfiles"
						},
						{
							"dataset": {
								"referenceName": "asacosmosdb01",
								"type": "DatasetReference"
							},
							"name": "UserProfiles"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "asal400_wwi_usertopproductpurchases_asa",
								"type": "DatasetReference"
							},
							"name": "UserTopProductPurchasesASA"
						},
						{
							"linkedService": {
								"referenceName": "asaworkspacedp210504-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "DataLake"
						}
					],
					"transformations": [
						{
							"name": "userId"
						},
						{
							"name": "UserTopProducts"
						},
						{
							"name": "DeriveProductColumns"
						},
						{
							"name": "UserPreferredProducts"
						},
						{
							"name": "JoinTopProductsWithPreferredProducts"
						},
						{
							"name": "DerivedColumnsForMerge"
						},
						{
							"name": "FilterNullProducts"
						}
					],
					"script": "source(output(\n\t\tvisitorId as string,\n\t\ttopProductPurchases as (productId as string, itemsPurchasedLast12Months as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments',\n\twildcardPaths:['online-user-profiles-02/*.json']) ~> EcommerceUserProfiles\nsource(output(\n\t\tuserId as integer,\n\t\tcartId as string,\n\t\tpreferredProducts as integer[],\n\t\tproductReviews as (productId as string, reviewText as string, reviewDate as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'document') ~> UserProfiles\nEcommerceUserProfiles derive(visitorId = toInteger(visitorId)) ~> userId\nuserId foldDown(unroll(topProductPurchases),\n\tmapColumn(\n\t\tvisitorId,\n\t\tproductId = topProductPurchases.productId,\n\t\titemsPurchasedLast12Months = topProductPurchases.itemsPurchasedLast12Months\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UserTopProducts\nUserTopProducts derive(productId = toInteger(productId),\n\t\titemsPurchasedLast12Months = toInteger(itemsPurchasedLast12Months)) ~> DeriveProductColumns\nUserProfiles foldDown(unroll(preferredProducts),\n\tmapColumn(\n\t\tuserId,\n\t\tpreferredProductId = preferredProducts\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UserPreferredProducts\nDeriveProductColumns, UserPreferredProducts join(visitorId == userId,\n\tjoinType:'outer',\n\tpartitionBy('hash', 30,\n\t\tproductId\n\t),\n\tbroadcast: 'left')~> JoinTopProductsWithPreferredProducts\nJoinTopProductsWithPreferredProducts derive(isTopProduct = toBoolean(iif(isNull(productId), 'false', 'true')),\n\t\tisPreferredProduct = toBoolean(iif(isNull(preferredProductId), 'false', 'true')),\n\t\tproductId = iif(isNull(productId), preferredProductId, productId),\n\t\tuserId = iif(isNull(userId), visitorId, userId)) ~> DerivedColumnsForMerge\nDerivedColumnsForMerge filter(!isNull(productId)) ~> FilterNullProducts\nFilterNullProducts sink(input(\n\t\tUserId as integer,\n\t\tProductId as integer,\n\t\tItemsPurchasedLast12Months as integer,\n\t\tIsTopProduct as boolean,\n\t\tIsPreferredProduct as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tUserId = userId,\n\t\tProductId = productId,\n\t\tItemsPurchasedLast12Months = itemsPurchasedLast12Months,\n\t\tIsTopProduct = isTopProduct,\n\t\tIsPreferredProduct = isPreferredProduct\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserTopProductPurchasesASA\nFilterNullProducts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'wwi-02',\n\tfolderPath: 'top-products',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tvisitorId,\n\t\tproductId,\n\t\titemsPurchasedLast12Months,\n\t\tpreferredProductId,\n\t\tuserId,\n\t\tisTopProduct,\n\t\tisPreferredProduct\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataLake"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/asal400_ecommerce_userprofiles_source')]",
				"[concat(variables('workspaceId'), '/datasets/asacosmosdb01')]",
				"[concat(variables('workspaceId'), '/datasets/asal400_wwi_usertopproductpurchases_asa')]",
				"[concat(variables('workspaceId'), '/linkedServices/asaworkspacedp210504-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Activity 03 - Data Warehouse Optimization')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": null,
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task01')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 08"
				},
				"content": {
					"query": "CREATE TABLE [wwi].[UserTopProductPurchases]\n(\n    [UserId] [int]  NOT NULL,\n    [ProductId] [int]  NOT NULL,\n    [ItemsPurchasedLast12Months] [int]  NULL,\n    [IsTopProduct] [bit]  NOT NULL,\n    [IsPreferredProduct] [bit]  NOT NULL\n)\nWITH\n(\n    DISTRIBUTION = HASH ( [UserId] ),\n    CLUSTERED COLUMNSTORE INDEX\n)\nGO\n\nCREATE TABLE [wwi].[CampaignAnalytics]\n(\n    [Region] [nvarchar](50)  NOT NULL,\n    [Country] [nvarchar](30)  NOT NULL,\n    [ProductCategory] [nvarchar](50)  NOT NULL,\n    [CampaignName] [nvarchar](500)  NOT NULL,\n    [Revenue] [decimal](10,2)  NULL,\n    [RevenueTarget] [decimal](10,2)  NULL,\n    [City] [nvarchar](50)  NULL,\n    [State] [nvarchar](25)  NULL\n)\nWITH\n(\n    DISTRIBUTION = HASH ( [Region] ),\n    CLUSTERED COLUMNSTORE INDEX\n)\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "CREATE SCHEMA [wwi_staging]\nGO\n\nCREATE TABLE [wwi_staging].[SaleHeap]\n( \n    [TransactionId] [uniqueidentifier]  NOT NULL,\n    [CustomerId] [int]  NOT NULL,\n    [ProductId] [smallint]  NOT NULL,\n    [Quantity] [smallint]  NOT NULL,\n    [Price] [decimal](9,2)  NOT NULL,\n    [TotalAmount] [decimal](9,2)  NOT NULL,\n    [TransactionDate] [int]  NOT NULL,\n    [ProfitAmount] [decimal](9,2)  NOT NULL,\n    [Hour] [tinyint]  NOT NULL,\n    [Minute] [tinyint]  NOT NULL,\n    [StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n    DISTRIBUTION = ROUND_ROBIN,\n    HEAP\n)\nGO\n\nCREATE TABLE [wwi_staging].[Sale]\n(\n    [TransactionId] [uniqueidentifier]  NOT NULL,\n    [CustomerId] [int]  NOT NULL,\n    [ProductId] [smallint]  NOT NULL,\n    [Quantity] [smallint]  NOT NULL,\n    [Price] [decimal](9,2)  NOT NULL,\n    [TotalAmount] [decimal](9,2)  NOT NULL,\n    [TransactionDate] [int]  NOT NULL,\n    [ProfitAmount] [decimal](9,2)  NOT NULL,\n    [Hour] [tinyint]  NOT NULL,\n    [Minute] [tinyint]  NOT NULL,\n    [StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n    DISTRIBUTION = HASH ( [CustomerId] ),\n    CLUSTERED COLUMNSTORE INDEX,\n    PARTITION\n    (\n        [TransactionDaten    )\n)\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "-- Replace SUFFIX with the lab workspace id.\nCREATE EXTERNAL DATA SOURCE ABSS\nWITH\n( TYPE = HADOOP,\n    LOCATION = 'abfss://wwi-02@asadatalakedp210504.dfs.core.windows.net'\n);\nGO\n\nCREATE EXTERNAL FILE FORMAT [ParquetFormat]\nWITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n)\nGO\n\nCREATE SCHEMA [wwi_external];\nGO\n\nCREATE EXTERNAL TABLE [wwi_external].Sales\n    (\n        [TransactionId] [nvarchar](36)  NOT NULL,\n        [CustomerId] [int]  NOT NULL,\n        [ProductId] [smallint]  NOT NULL,\n        [Quantity] [smallint]  NOT NULL,\n        [Price] [decimal](9,2)  NOT NULL,\n        [TotalAmount] [decimal](9,2)  NOT NULL,\n        [TransactionDate] [int]  NOT NULL,\n        [ProfitAmount] [decimal](9,2)  NOT NULL,\n        [Hour] [tinyint]  NOT NULL,\n        [Minute] [tinyint]  NOT NULL,\n        [StoreId] [smallint]  NOT NULL\n    )\nWITH\n    (\n        LOCATION = '/sale-small/Year=2019',  \n        DATA_SOURCE = ABSS,\n        FILE_FORMAT = [ParquetFormat]  \n    )  \nGO\n\nINSERT INTO [wwi_staging].[SaleHeap]\nSELECT *\nFROM [wwi_external].[Sales]\n\nSELECT count(1) FROM [wwi_staging].[SaleHeap]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "TRUNCATE TABLE wwi_staging.SaleHeap;\nGO\n\n-- Replace <PrimaryStorage> with the workspace default storage account name.\nCOPY INTO wwi_staging.SaleHeap\nFROM 'https://asadatalakedp210504.dfs.core.windows.net/wwi-02/sale-small/Year=2019'\nWITH (\n    FILE_TYPE = 'PARQUET',\n    COMPRESSION = 'SNAPPY'\n)\nGO\n\nSELECT COUNT(1) FROM wwi_staging.SaleHeap(nolock)",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "COPY INTO wwi_staging.Sale\nFROM 'https://asadatalakedp210504.dfs.core.windows.net/wwi-02/sale-small/Year=2019'\nWITH (\n    FILE_TYPE = 'PARQUET',\n    COMPRESSION = 'SNAPPY'\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "CREATE TABLE [wwi_staging].DailySalesCounts\n    (\n        [Date] [int]  NOT NULL,\n        [NorthAmerica] [int]  NOT NULL,\n        [SouthAmerica] [int]  NOT NULL,\n        [Europe] [int]  NOT NULL,\n        [Africa] [int]  NOT NULL,\n        [Asia] [int]  NOT NULL\n    )\nGO\n\n-- Replace <PrimaryStorage> with the workspace default storage account name.\nCOPY INTO wwi_staging.DailySalesCounts\nFROM 'https://asadatalakedp210504.dfs.core.windows.net/wwi-02/campaign-analytics/dailycounts.txt'\nWITH (\n    FILE_TYPE = 'CSV',\n    FIELDTERMINATOR='.',\n    ROWTERMINATOR=','\n)\nGO\n\nSELECT * FROM [wwi_staging].DailySalesCounts\nORDER BY [Date] DESC\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex01Task6')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT csv_dailysales\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = '.',\n        DATE_FORMAT = '',\n        USE_TYPE_DEFAULT = False\n    )\n);\nGO\n\nCREATE EXTERNAL TABLE [wwi_external].DailySalesCounts\n    (\n        [Date] [int]  NOT NULL,\n        [NorthAmerica] [int]  NOT NULL,\n        [SouthAmerica] [int]  NOT NULL,\n        [Europe] [int]  NOT NULL,\n        [Africa] [int]  NOT NULL,\n        [Asia] [int]  NOT NULL\n    )\nWITH\n    (\n        LOCATION = '/campaign-analytics/dailycounts.txt',  \n        DATA_SOURCE = ABSS,\n        FILE_FORMAT = csv_dailysales\n    )  \nGO\nINSERT INTO [wwi_staging].[DailySalesCounts]\nSELECT *\nFROM [wwi_external].[DailySalesCounts]\n\n\nSELECT * FROM [wwi_staging].[DailySalesCounts]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ex02Task1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Module 07"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.workload_management_workload_classifiers WHERE group_name = 'BigDataLoad')\nBEGIN\n    CREATE WORKLOAD GROUP BigDataLoad WITH  \n    (\n        MIN_PERCENTAGE_RESOURCE = 50 -- integer value\n        ,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 25 --  (guaranteed a minimum of 4 concurrency)\n        ,CAP_PERCENTAGE_RESOURCE = 100\n    );\nEND\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.workload_management_workload_classifiers WHERE [name] = 'HeavyLoader')\nBEGIN\n    CREATE WORKLOAD Classifier HeavyLoader WITH\n    (\n        Workload_Group ='BigDataLoad',\n        MemberName='asa.sql.import01',\n        IMPORTANCE = HIGH\n    );\nEND\n\nSELECT * FROM sys.workload_management_workload_classifiers\n\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "SQLPool01",
						"databaseName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab 05 - Exercise 3 - Column Level Security')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": null,
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab 05 - Exercise 3 - Dynamic Data Masking')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": null,
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab 05 - Exercise 3 - Row Level Security')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": null,
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLPool01')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "westeurope"
		}
	]
}